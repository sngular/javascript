stages:
  - setup
  - lint
  - comment
  - release

variables:
  npm_config_cache: '$CI_PROJECT_DIR/.npm'
  NPM_TOKEN: ${CI_JOB_TOKEN}
  GITLAB_HOST: https://${CI_SERVER_HOST}
  GITLAB_CI_USER_NAME: OS3 bot
  GITLAB_CI_USER_EMAIL: os3+gitlab@sngular.com

cache:
  key:
    files:
      - package-lock.json
  paths:
    - .npm
  policy: pull

workflow:
  rules:
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

setup:
  stage: setup
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  tags:
    - node
  before_script:
    - npm config set -- //$CI_SERVER_HOST/api/v4/packages/npm/:_authToken=$CI_JOB_TOKEN
    - npm config set @os3:registry https://$CI_SERVER_HOST/api/v4/packages/npm/
  script:
    - npm ci
  cache:
    policy: pull-push
  artifacts:
    expire_in: 1 day
    paths:
      - node_modules
      - .husky
lint:
  stage: lint
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  tags:
    - node
  needs:
    - job: setup
  script: npm run lint

comment:
  stage: comment
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  tags:
    - node
  needs:
    - job: setup
  script: npx changesets-gitlab comment

publish:
  stage: release
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  tags:
    - node
  needs:
    - job: setup
  before_script:
    - echo "@os3:registry=https://${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/">.npmrc
    - echo "//${CI_SERVER_HOST}/api/v4/packages/npm/:_authToken=${CI_JOB_TOKEN}">>.npmrc
    - echo "//${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/:_authToken=${CI_JOB_TOKEN}">>.npmrc
    - echo "Created the following .npmrc:"; cat .npmrc
  script: npx changesets-gitlab
  variables:
    INPUT_COMMIT: 'chore: release'
    INPUT_TITLE: 'Release'
    INPUT_REMOVE_SOURCE_BRANCH: 'true'
    INPUT_VERSION: npm run update-versions
    INPUT_PUBLISH: npx changeset publish
